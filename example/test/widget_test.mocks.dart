// Mocks generated by Mockito 5.0.16 from annotations
// in quoter/example/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: unnecessary_overrides

import 'dart:math' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:quoter/src/models/models.dart' as _i3;
import 'package:quoter/src/quoter.dart' as _i4;
import 'package:quoter/src/repositories/repositories.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeQuoteRepository_0 extends _i1.Fake implements _i2.QuoteRepository {}

class _FakeQuote_1 extends _i1.Fake implements _i3.Quote {}

/// A class which mocks [Quoter].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuoter extends _i1.Mock implements _i4.Quoter {
  MockQuoter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.QuoteRepository get quoteRepository =>
      (super.noSuchMethod(Invocation.getter(#quoteRepository),
          returnValue: _FakeQuoteRepository_0()) as _i2.QuoteRepository);
  @override
  List<_i3.Quote> get getAllQuotes =>
      (super.noSuchMethod(Invocation.getter(#getAllQuotes),
          returnValue: <_i3.Quote>[]) as List<_i3.Quote>);
  @override
  _i3.Quote getRandomQuote([_i5.Random? randomizer]) =>
      (super.noSuchMethod(Invocation.method(#getRandomQuote, [randomizer]),
          returnValue: _FakeQuote_1()) as _i3.Quote);
  @override
  String toString() => super.toString();
}
